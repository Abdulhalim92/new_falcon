{"file":"main.go:25","func":"main.main()","level":"fatal","msg":"failed to connect to `host=port= user=password= database=sslmode=`: hostname resolving error (lookup port=: no such host)","time":"2023-10-03T10:39:29+05:00"}
{"file":"main.go:25","func":"main.main()","level":"fatal","msg":"failed to connect to `host=port= user=password= database=sslmode=`: hostname resolving error (lookup port=: no such host)","time":"2023-10-03T10:40:11+05:00"}
{"file":"main.go:25","func":"main.main()","level":"fatal","msg":"failed to connect to `host=port= user=password= database=sslmode=`: hostname resolving error (lookup port=: no such host)","time":"2023-10-03T10:49:56+05:00"}
{"file":"main.go:25","func":"main.main()","level":"fatal","msg":"failed to connect to `host=port= user=password= database=sslmode=`: hostname resolving error (lookup port=: no such host)","time":"2023-10-03T10:51:12+05:00"}
{"file":"main.go:25","func":"main.main()","level":"fatal","msg":"failed to connect to `host=port= user=password= database=sslmode=`: hostname resolving error (lookup port=: no such host)","time":"2023-10-03T10:52:21+05:00"}
{"file":"main.go:25","func":"main.main()","level":"fatal","msg":"failed to connect to `host=localhost user=falcon database=falcon_db`: failed SASL auth (FATAL: password authentication failed for user \"falcon\" (SQLSTATE 28P01))","time":"2023-10-03T10:55:58+05:00"}
{"file":"main.go:41","func":"main.main()","level":"fatal","msg":"listen tcp :80: bind: permission denied","time":"2023-10-03T10:56:14+05:00"}
{"file":"main.go:41","func":"main.main()","level":"fatal","msg":"listen tcp :80: bind: permission denied","time":"2023-10-03T10:59:45+05:00"}
{"file":"main.go:25","func":"main.main()","level":"fatal","msg":"failed to connect to `host=localhost user=falcon database=falcon_db`: failed SASL auth (FATAL: password authentication failed for user \"falcon\" (SQLSTATE 28P01))","time":"2023-10-04T17:58:32+05:00"}
{"file":"main.go:41","func":"main.main()","level":"fatal","msg":"listen tcp :80: bind: permission denied","time":"2023-10-04T17:58:53+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"validator: (nil *model.RegisterResponse)","time":"2023-10-05T10:11:01+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"validator: (nil *model.RegisterResponse)","time":"2023-10-05T10:18:19+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"validator: (nil *model.RegisterResponse)","time":"2023-10-05T10:19:12+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"validator: (nil *model.RegisterResponse)","time":"2023-10-05T11:04:46+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"Key: 'RegisterRequest.FirstName' Error:Field validation for 'FirstName' failed on the 'min' tag\nKey: 'RegisterRequest.LastName' Error:Field validation for 'LastName' failed on the 'min' tag\nKey: 'RegisterRequest.MobileNumber' Error:Field validation for 'MobileNumber' failed on the 'required' tag","time":"2023-10-05T11:05:48+05:00"}
{"file":"auth.go:31","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"Key: 'RegisterRequest.FirstName' Error:Field validation for 'FirstName' failed on the 'min' tag\nKey: 'RegisterRequest.LastName' Error:Field validation for 'LastName' failed on the 'min' tag\nKey: 'RegisterRequest.MobileNumber' Error:Field validation for 'MobileNumber' failed on the 'required' tag","time":"2023-10-05T11:40:50+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"Key: 'RegisterRequest.FirstName' Error:Field validation for 'FirstName' failed on the 'min' tag\nKey: 'RegisterRequest.LastName' Error:Field validation for 'LastName' failed on the 'min' tag\nKey: 'RegisterRequest.MobileNumber' Error:Field validation for 'MobileNumber' failed on the 'required' tag","time":"2023-10-05T11:41:24+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"Key: 'RegisterRequest.FirstName' Error:Field validation for 'FirstName' failed on the 'min' tag\nKey: 'RegisterRequest.LastName' Error:Field validation for 'LastName' failed on the 'min' tag\nKey: 'RegisterRequest.MobileNumber' Error:Field validation for 'MobileNumber' failed on the 'required' tag","time":"2023-10-05T11:41:50+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"Key: 'RegisterRequest.FirstName' Error:Field validation for 'FirstName' failed on the 'min' tag\nKey: 'RegisterRequest.LastName' Error:Field validation for 'LastName' failed on the 'min' tag\nKey: 'RegisterRequest.MobileNumber' Error:Field validation for 'MobileNumber' failed on the 'required' tag","time":"2023-10-05T11:47:31+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"Key: 'RegisterRequest.FirstName' Error:Field validation for 'FirstName' failed on the 'min' tag\nKey: 'RegisterRequest.LastName' Error:Field validation for 'LastName' failed on the 'min' tag\nKey: 'RegisterRequest.MobileNumber' Error:Field validation for 'MobileNumber' failed on the 'required' tag","time":"2023-10-05T11:50:07+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"Key: 'RegisterRequest.FirstName' Error:Field validation for 'FirstName' failed on the 'min' tag\nKey: 'RegisterRequest.LastName' Error:Field validation for 'LastName' failed on the 'min' tag\nKey: 'RegisterRequest.MobileNumber' Error:Field validation for 'MobileNumber' failed on the 'required' tag","time":"2023-10-05T11:51:10+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"Key: 'RegisterRequest.FirstName' Error:Field validation for 'FirstName' failed on the 'min' tag\nKey: 'RegisterRequest.LastName' Error:Field validation for 'LastName' failed on the 'min' tag\nKey: 'RegisterRequest.MobileNumber' Error:Field validation for 'MobileNumber' failed on the 'required' tag","time":"2023-10-05T11:52:44+05:00"}
{"file":"identity.go:44","func":"falcon/repository/identity.(*identityManager).loginRestApiClient()","level":"error","msg":"failed to login the client: could not get token: parse \"http://localhost:8181\\\"/realms/my-demo/protocol/openid-connect/token\": invalid port \":8181\\\"\" after host","time":"2023-10-05T11:55:27+05:00"}
{"file":"identity.go:44","func":"falcon/repository/identity.(*identityManager).loginRestApiClient()","level":"error","msg":"failed to login the client: could not get token: parse \"http://localhost:8181\\\"/realms/my-demo/protocol/openid-connect/token\": invalid port \":8181\\\"\" after host","time":"2023-10-05T12:00:15+05:00"}
{"file":"identity.go:44","func":"falcon/repository/identity.(*identityManager).loginRestApiClient()","level":"error","msg":"failed to login the client: could not get token: parse \"http://localhost:8181\\\"/realms/my-demo/protocol/openid-connect/token\": invalid port \":8181\\\"\" after host","time":"2023-10-05T12:00:58+05:00"}
{"file":"identity.go:44","func":"falcon/repository/identity.(*identityManager).loginRestApiClient()","level":"error","msg":"failed to login the client: could not get token: parse \"http://localhost:8181\\\"/realms/my-demo/protocol/openid-connect/token\": invalid port \":8181\\\"\" after host","time":"2023-10-05T12:01:13+05:00"}
{"file":"identity.go:44","func":"falcon/repository/identity.(*identityManager).loginRestApiClient()","level":"error","msg":"failed to login the client: could not get token: parse \"http://localhost:8181\\\"/realms/my-demo/protocol/openid-connect/token\": invalid port \":8181\\\"\" after host","time":"2023-10-05T15:02:10+05:00"}
{"file":"identity.go:44","func":"falcon/repository/identity.(*identityManager).loginRestApiClient()","level":"error","msg":"failed to login the client: could not get token: parse \"http://localhost:8181\\\"/realms/my-demo/protocol/openid-connect/token\": invalid port \":8181\\\"\" after host","time":"2023-10-05T15:05:11+05:00"}
{"file":"identity.go:44","func":"falcon/repository/identity.(*identityManager).loginRestApiClient()","level":"error","msg":"failed to login the client: could not get token: parse \"http://localhost:8181\\\"/realms/my-demo/protocol/openid-connect/token\": invalid port \":8181\\\"\" after host","time":"2023-10-05T15:05:38+05:00"}
{"file":"identity.go:44","func":"falcon/repository/identity.(*identityManager).loginRestApiClient()","level":"error","msg":"failed to login the client: could not get token: parse \"http://localhost:8181\\\"/realms/my-demo/protocol/openid-connect/token\": invalid port \":8181\\\"\" after host","time":"2023-10-05T15:06:52+05:00"}
{"file":"identity.go:44","func":"falcon/repository/identity.(*identityManager).loginRestApiClient()","level":"error","msg":"failed to login the client: could not get token: parse \"http://localhost:8181\\\"/realms/my-demo/protocol/openid-connect/token\": invalid port \":8181\\\"\" after host","time":"2023-10-05T15:08:13+05:00"}
{"file":"identity.go:44","func":"falcon/repository/identity.(*identityManager).loginRestApiClient()","level":"error","msg":"failed to login the client: could not get token: parse \"http://localhost:8181\\\"/realms/my-demo/protocol/openid-connect/token\": invalid port \":8181\\\"\" after host","time":"2023-10-05T15:08:29+05:00"}
{"file":"identity.go:44","func":"falcon/repository/identity.(*identityManager).loginRestApiClient()","level":"error","msg":"failed to login the client: could not get token: parse \"http://localhost:8181\\\"/realms/my-demo/protocol/openid-connect/token\": invalid port \":8181\\\"\" after host","time":"2023-10-05T15:14:30+05:00"}
{"file":"identity.go:44","func":"falcon/repository/identity.(*identityManager).loginRestApiClient()","level":"error","msg":"failed to login the client: could not get token: parse \"http://localhost:8181\\\"/realms/my-demo/protocol/openid-connect/token\": invalid port \":8181\\\"\" after host","time":"2023-10-05T15:16:02+05:00"}
{"file":"user.go:34","func":"falcon/repository/database.(*repository).GetUserByName()","level":"error","msg":"invalid value, should be pointer to struct or slice","time":"2023-10-05T15:16:35+05:00"}
{"file":"identity.go:82","func":"falcon/repository/identity.(*identityManager).CreateUser()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:18:04+05:00"}
{"file":"user.go:34","func":"falcon/repository/database.(*repository).GetUserByName()","level":"error","msg":"invalid value, should be pointer to struct or slice","time":"2023-10-05T15:18:53+05:00"}
{"file":"identity.go:82","func":"falcon/repository/identity.(*identityManager).CreateUser()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:22:09+05:00"}
{"file":"identity.go:82","func":"falcon/repository/identity.(*identityManager).CreateUser()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:23:07+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:23:07+05:00"}
{"file":"identity.go:82","func":"falcon/repository/identity.(*identityManager).CreateUser()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:24:04+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:24:04+05:00"}
{"file":"identity.go:82","func":"falcon/repository/identity.(*identityManager).CreateUser()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:26:43+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"{409 Conflict: User exists with same username failed to create the user: 409 Conflict: User exists with same username  6}","time":"2023-10-05T15:26:43+05:00"}
{"file":"identity.go:82","func":"falcon/repository/identity.(*identityManager).CreateUser()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:28:38+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"{409 Conflict: User exists with same username failed to create the user: 409 Conflict: User exists with same username  6}","time":"2023-10-05T15:28:38+05:00"}
{"file":"identity.go:82","func":"falcon/repository/identity.(*identityManager).CreateUser()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:30:22+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"{409 Conflict: User exists with same username failed to create the user: 409 Conflict: User exists with same username  6}","time":"2023-10-05T15:30:22+05:00"}
{"file":"identity.go:82","func":"falcon/repository/identity.(*identityManager).CreateUser()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:30:56+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:30:56+05:00"}
{"file":"identity.go:82","func":"falcon/repository/identity.(*identityManager).CreateUser()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:31:23+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:31:23+05:00"}
{"file":"identity.go:82","func":"falcon/repository/identity.(*identityManager).CreateUser()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:31:52+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:31:52+05:00"}
{"file":"identity.go:82","func":"falcon/repository/identity.(*identityManager).CreateUser()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:33:11+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:33:11+05:00"}
{"file":"identity.go:82","func":"falcon/repository/identity.(*identityManager).CreateUser()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:34:37+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:34:37+05:00"}
{"file":"identity.go:82","func":"falcon/repository/identity.(*identityManager).CreateUser()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:35:58+05:00"}
{"file":"auth.go:30","func":"falcon/contoller/routes.(*WebApi).register()","level":"error","msg":"failed to create the user: 409 Conflict: User exists with same username","time":"2023-10-05T15:35:58+05:00"}
{"file":"auth.go:70","func":"falcon/contoller/routes.(*WebApi).login()","level":"error","msg":"validator: (nil *model.LoginResponse)","time":"2023-10-05T15:38:10+05:00"}
{"file":"auth.go:70","func":"falcon/contoller/routes.(*WebApi).login()","level":"error","msg":"validator: (nil *model.LoginResponse)","time":"2023-10-05T15:39:08+05:00"}
{"file":"auth.go:70","func":"falcon/contoller/routes.(*WebApi).login()","level":"error","msg":"validator: (nil *model.LoginResponse)","time":"2023-10-05T15:39:35+05:00"}
{"file":"auth.go:70","func":"falcon/contoller/routes.(*WebApi).login()","level":"error","msg":"validator: (nil *model.LoginResponse)","time":"2023-10-05T15:39:55+05:00"}
{"file":"auth.go:72","func":"falcon/contoller/routes.(*WebApi).login()","level":"error","msg":"validator: (nil *model.LoginResponse)","time":"2023-10-05T15:40:55+05:00"}
{"file":"auth.go:70","func":"falcon/contoller/routes.(*WebApi).login()","level":"error","msg":"validator: (nil *model.LoginResponse)","time":"2023-10-05T15:41:28+05:00"}
{"file":"identity.go:245","func":"falcon/repository/identity.(*identityManager).ValidateOTP()","level":"error","msg":"failed to get user by ID: 404 Not Found: User not found","time":"2023-10-05T15:56:22+05:00"}
{"file":"auth.go:154","func":"falcon/contoller/routes.(*WebApi).validateOtp()","level":"error","msg":"invalid otp","time":"2023-10-05T15:56:22+05:00"}
{"file":"identity.go:245","func":"falcon/repository/identity.(*identityManager).ValidateOTP()","level":"error","msg":"failed to get user by ID: 404 Not Found: User not found","time":"2023-10-05T15:56:55+05:00"}
{"file":"auth.go:154","func":"falcon/contoller/routes.(*WebApi).validateOtp()","level":"error","msg":"invalid otp","time":"2023-10-05T15:56:55+05:00"}
{"file":"identity.go:245","func":"falcon/repository/identity.(*identityManager).ValidateOTP()","level":"error","msg":"failed to get user by ID: 404 Not Found: User not found","time":"2023-10-05T15:57:38+05:00"}
{"file":"auth.go:154","func":"falcon/contoller/routes.(*WebApi).validateOtp()","level":"error","msg":"invalid otp","time":"2023-10-05T15:57:38+05:00"}
{"file":"identity.go:245","func":"falcon/repository/identity.(*identityManager).ValidateOTP()","level":"error","msg":"failed to get user by ID: 404 Not Found: User not found","time":"2023-10-05T15:58:29+05:00"}
{"file":"auth.go:154","func":"falcon/contoller/routes.(*WebApi).validateOtp()","level":"error","msg":"invalid otp","time":"2023-10-05T15:58:29+05:00"}
{"file":"identity.go:245","func":"falcon/repository/identity.(*identityManager).ValidateOTP()","level":"error","msg":"failed to get user by ID: 404 Not Found: User not found","time":"2023-10-05T15:59:40+05:00"}
{"file":"auth.go:154","func":"falcon/contoller/routes.(*WebApi).validateOtp()","level":"error","msg":"invalid otp","time":"2023-10-05T15:59:40+05:00"}
{"file":"auth.go:154","func":"falcon/contoller/routes.(*WebApi).validateOtp()","level":"error","msg":"invalid otp","time":"2023-10-05T16:02:34+05:00"}
